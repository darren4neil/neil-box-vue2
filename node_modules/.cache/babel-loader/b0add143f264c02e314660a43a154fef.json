{"remainingRequest":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\babel-loader\\lib\\index.js!C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Workspace\\VueProjects\\vue-template-box\\src\\menu\\MainContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\src\\menu\\MainContent.vue","mtime":1677397331769},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677397323499},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1677397330759},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\babel-loader\\lib\\index.js","mtime":1677397323090},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677397323499},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\vue-loader\\lib\\index.js","mtime":1677397331049}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.filter\";\nimport _objectSpread from \"C:\\\\Workspace\\\\VueProjects\\\\vue-template-box\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  computed: _objectSpread({}, mapState({\n    headerColor: function headerColor(state) {\n      return state.menu.headerColor;\n    },\n    isCollapse: function isCollapse(state) {\n      return state.menu.isCollapse;\n    },\n    activeIndex: function activeIndex(state) {\n      return state.menu.activeIndex;\n    }\n  }), {\n    editableTabs: {\n      get: function get() {\n        return this.$store.state.menu.editableTabs;\n      },\n      set: function set(val) {\n        this.$store.commit('editableTabs', val);\n      }\n    },\n    editableTabsValue: {\n      get: function get() {\n        return this.$store.state.menu.editableTabsValue;\n      },\n      set: function set(val) {\n        this.$store.commit('editableTabsValue', val);\n      }\n    }\n  }),\n  data: function data() {\n    return {\n      tabIndex: 2\n    };\n  },\n  methods: {\n    // tabs, 选中tab\n    selectedTabHandle: function selectedTabHandle(tab) {\n      tab = this.editableTabs.filter(function (item) {\n        return item.name === tab.name;\n      });\n\n      if (tab.length >= 1) {\n        //切换标签页时同步更新高亮菜单\n        this.$store.commit('activeIndex', tab[0].menuId.toString());\n        this.$router.push(tab[0].url);\n      }\n    },\n    //删除标签页\n    removeTab: function removeTab(targetName) {\n      var _this = this;\n\n      var tabs = this.editableTabs;\n      var activeName = this.editableTabsValue;\n\n      if (activeName === targetName) {\n        tabs.forEach(function (tab, index) {\n          if (tab.name === targetName) {\n            var nextTab = tabs[index + 1] || tabs[index - 1];\n\n            if (nextTab) {\n              activeName = nextTab.name;\n            }\n          }\n        });\n      } //当前标签序号\n\n\n      this.editableTabsValue = activeName; //标签\n\n      this.editableTabs = tabs.filter(function (tab) {\n        return tab.name !== targetName;\n      });\n      var tab2 = this.editableTabs.filter(function (item) {\n        return item.name === _this.editableTabsValue;\n      });\n\n      if (tab2.length >= 1) {\n        //切换标签页时同步更新高亮菜单\n        this.$store.commit('activeIndex', tab2[0].menuId.toString()); //跳转\n\n        this.$router.push(tab2[0].url);\n      }\n    },\n    // tabs, 关闭当前\n    CloseCurrentTab: function CloseCurrentTab() {\n      this.removeTab(this.editableTabsValue);\n    },\n    // tabs, 关闭其它\n    CloseOtherTab: function CloseOtherTab() {\n      var _this2 = this;\n\n      this.editableTabs = this.editableTabs.filter(function (item) {\n        return item.name === _this2.editableTabsValue;\n      });\n    },\n    // tabs, 关闭全部\n    CloseAllTab: function CloseAllTab() {\n      this.editableTabs = [];\n      this.editableTabsValue = '1';\n      this.$store.commit('activeIndex', null);\n      this.$router.push(\"/\");\n    },\n    // tabs, 刷新当前\n    RefreshCurrentTab: function RefreshCurrentTab() {\n      var _this3 = this;\n\n      var tab2 = this.editableTabs.filter(function (item) {\n        return item.name === _this3.editableTabsValue;\n      });\n\n      if (tab2.length >= 1) {\n        this.$nextTick(function () {\n          //跳转\n          _this3.$router.push(tab2[0].url);\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["MainContent.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"main-container\" :class=\"isCollapse?'tabs-width2':'tabs-width1'\">\r\n        <el-tabs class=\"tabs\" v-model=\"editableTabsValue\" type=\"card\" closable @tab-remove=\"removeTab\" @tab-click=\"selectedTabHandle\" :class=\"isCollapse?'tabs-width2':'tabs-width1'\">\r\n            <el-tab-pane\r\n                v-for=\"item in editableTabs\"\r\n                :key=\"item.name\"\r\n                :label=\"item.title\"\r\n                :name=\"item.name\"\r\n            >\r\n            <span slot=\"label\"><i :class=\"item.icon\"></i> {{item.title}} </span>\r\n            </el-tab-pane>\r\n            <el-dropdown class=\"tabs-tools\" :show-timeout=\"0\" trigger=\"hover\">\r\n                <div style=\"font-size:20px;width:50px;\"><i class=\"el-icon-arrow-down\"></i></div>\r\n                <el-dropdown-menu slot=\"dropdown\">\r\n                    <el-dropdown-item @click.native=\"CloseCurrentTab\">关闭当前标签</el-dropdown-item>\r\n                    <el-dropdown-item @click.native=\"CloseOtherTab\">关闭其它标签</el-dropdown-item>\r\n                    <el-dropdown-item @click.native=\"CloseAllTab\">关闭全部标签</el-dropdown-item>\r\n                    <el-dropdown-item @click.native=\"RefreshCurrentTab\">刷新当前标签</el-dropdown-item>\r\n                </el-dropdown-menu>\r\n            </el-dropdown>\r\n        </el-tabs>\r\n        <div class=\"view\">\r\n            <!-- 内容区域 -->\r\n            <router-view></router-view>\r\n        </div>\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\n\texport default {\r\n        computed: {\r\n        ... mapState({\r\n                headerColor: state=>state.menu.headerColor,\r\n                isCollapse: state=>state.menu.isCollapse,\r\n                activeIndex: state=>state.menu.activeIndex\r\n            }),\r\n            editableTabs:{\r\n                get () { return this.$store.state.menu.editableTabs },\r\n                set (val) { this.$store.commit('editableTabs', val) }\r\n            },\r\n            editableTabsValue:{\r\n                get () { return this.$store.state.menu.editableTabsValue },\r\n                set (val) { this.$store.commit('editableTabsValue', val) }\r\n            }\r\n        },\r\n\t    data() {\r\n\t      return {\r\n                         \r\n            tabIndex: 2\r\n            };\r\n\t    },\r\n\t    methods: {\r\n            // tabs, 选中tab\r\n            selectedTabHandle (tab) {\r\n                tab = this.editableTabs.filter(item => item.name === tab.name)\r\n                if (tab.length >= 1) {\r\n                    //切换标签页时同步更新高亮菜单\r\n                    this.$store.commit('activeIndex', tab[0].menuId.toString());\r\n                    this.$router.push(tab[0].url);\r\n                }\r\n            },\r\n            //删除标签页\r\n\t        removeTab(targetName) {\r\n                let tabs = this.editableTabs;\r\n                let activeName = this.editableTabsValue;\r\n                if (activeName === targetName) {\r\n                tabs.forEach((tab, index) => {\r\n                    if (tab.name === targetName) {\r\n                        let nextTab = tabs[index + 1] || tabs[index - 1];\r\n                        if (nextTab) {\r\n                            activeName = nextTab.name;\r\n                        }\r\n                    }\r\n                });\r\n                }\r\n                //当前标签序号\r\n                this.editableTabsValue = activeName;\r\n                //标签\r\n                this.editableTabs = tabs.filter(tab => tab.name !== targetName);\r\n                var tab2 = this.editableTabs.filter(item => item.name === this.editableTabsValue);\r\n                if (tab2.length >= 1) {\r\n                    //切换标签页时同步更新高亮菜单\r\n                    this.$store.commit('activeIndex', tab2[0].menuId.toString());\r\n                    //跳转\r\n                    this.$router.push(tab2[0].url);\r\n                }\r\n            },\r\n            // tabs, 关闭当前\r\n            CloseCurrentTab () {\r\n                this.removeTab(this.editableTabsValue)\r\n            },\r\n            // tabs, 关闭其它\r\n            CloseOtherTab () {\r\n                this.editableTabs = this.editableTabs.filter(item => item.name === this.editableTabsValue)\r\n            },\r\n            // tabs, 关闭全部\r\n            CloseAllTab () {\r\n                this.editableTabs = [];\r\n                this.editableTabsValue = '1';\r\n                this.$store.commit('activeIndex', null);\r\n                this.$router.push(\"/\")\r\n            },\r\n            // tabs, 刷新当前\r\n            RefreshCurrentTab () {\r\n                var tab2 = this.editableTabs.filter(item => item.name === this.editableTabsValue);\r\n                if (tab2.length >= 1) {\r\n                    this.$nextTick(() => {\r\n                        //跳转\r\n                        this.$router.push(tab2[0].url);\r\n                    })\r\n                }\r\n                \r\n            }\r\n\t    }\r\n\t  }\r\n</script>\r\n\r\n\r\n<style>\r\n\t.main-container{\r\n        padding: 0 5px 5px;\r\n        position: absolute;\r\n        top: 5rem;\r\n        left: 1px;\r\n        right: 1px;\r\n        bottom: 0px;\r\n    }\r\n    .tabs {\r\n        position: fixed;\r\n        top: 60px;\r\n        right: 2px;\r\n        padding-left: 0px;\r\n        padding-right: 2px;\r\n        z-index: 1020;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        font-size: 14px;\r\n        background: rgb(255, 253, 255);\r\n        border-color: rgba(200, 206, 206, 0.5);\r\n        /* // border-left-width: 1px;\r\n        // border-left-style: solid; */\r\n        border-bottom-width: 1px;\r\n        border-bottom-style: solid;\r\n    }\r\n    .tabs-width1{\r\n        left: 200px;\r\n    }\r\n    .tabs-width2{\r\n        left: 65px;\r\n    }\r\n    .view{\r\n        position: absolute;\r\n        top: 45px;\r\n        left: 5px;\r\n        right: 5px;\r\n        bottom: 5px;\r\n        padding: 5px;\r\n    }\r\n    .tabs-tools {\r\n        position: fixed;\r\n        top: 60px;\r\n        right: 0;\r\n        z-index: 1000;\r\n        height: 40px;\r\n        font-size: 14px;\r\n        line-height: 40px;\r\n        cursor: pointer;\r\n        border-color: rgba(200, 206, 206, 0.5);\r\n        border-left-width: 1px;\r\n        border-left-style: solid;\r\n        border-bottom-width: 1px;\r\n        border-bottom-style: solid;\r\n        background: rgba(255, 255, 255, 1);\r\n    }\r\n</style>"],"sourceRoot":"src/menu"}]}