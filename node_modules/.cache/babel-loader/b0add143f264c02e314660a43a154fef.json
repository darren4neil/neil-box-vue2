{"remainingRequest":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\babel-loader\\lib\\index.js!C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Workspace\\VueProjects\\vue-template-box\\src\\menu\\MainContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\src\\menu\\MainContent.vue","mtime":1654529038000},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677392615027},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1677392610787},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\babel-loader\\lib\\index.js","mtime":1677392616277},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677392615027},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\vue-loader\\lib\\index.js","mtime":1677392613557}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.filter\";\nimport _objectSpread from \"C:\\\\Workspace\\\\VueProjects\\\\vue-template-box\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  computed: _objectSpread({}, mapState({\n    headerColor: function headerColor(state) {\n      return state.menu.headerColor;\n    },\n    isCollapse: function isCollapse(state) {\n      return state.menu.isCollapse;\n    },\n    activeIndex: function activeIndex(state) {\n      return state.menu.activeIndex;\n    }\n  }), {\n    editableTabs: {\n      get: function get() {\n        return this.$store.state.menu.editableTabs;\n      },\n      set: function set(val) {\n        this.$store.commit('editableTabs', val);\n      }\n    },\n    editableTabsValue: {\n      get: function get() {\n        return this.$store.state.menu.editableTabsValue;\n      },\n      set: function set(val) {\n        this.$store.commit('editableTabsValue', val);\n      }\n    }\n  }),\n  data: function data() {\n    return {\n      tabIndex: 2\n    };\n  },\n  methods: {\n    // tabs, 选中tab\n    selectedTabHandle: function selectedTabHandle(tab) {\n      tab = this.editableTabs.filter(function (item) {\n        return item.name === tab.name;\n      });\n\n      if (tab.length >= 1) {\n        //切换标签页时同步更新高亮菜单\n        this.$store.commit('activeIndex', tab[0].menuId.toString());\n        this.$router.push(tab[0].url);\n      }\n    },\n    //删除标签页\n    removeTab: function removeTab(targetName) {\n      var _this = this;\n\n      var tabs = this.editableTabs;\n      var activeName = this.editableTabsValue;\n\n      if (activeName === targetName) {\n        tabs.forEach(function (tab, index) {\n          if (tab.name === targetName) {\n            var nextTab = tabs[index + 1] || tabs[index - 1];\n\n            if (nextTab) {\n              activeName = nextTab.name;\n            }\n          }\n        });\n      } //当前标签序号\n\n\n      this.editableTabsValue = activeName; //标签\n\n      this.editableTabs = tabs.filter(function (tab) {\n        return tab.name !== targetName;\n      });\n      var tab2 = this.editableTabs.filter(function (item) {\n        return item.name === _this.editableTabsValue;\n      });\n\n      if (tab2.length >= 1) {\n        //切换标签页时同步更新高亮菜单\n        this.$store.commit('activeIndex', tab2[0].menuId.toString()); //跳转\n\n        this.$router.push(tab2[0].url);\n      }\n    },\n    // tabs, 关闭当前\n    CloseCurrentTab: function CloseCurrentTab() {\n      this.removeTab(this.editableTabsValue);\n    },\n    // tabs, 关闭其它\n    CloseOtherTab: function CloseOtherTab() {\n      var _this2 = this;\n\n      this.editableTabs = this.editableTabs.filter(function (item) {\n        return item.name === _this2.editableTabsValue;\n      });\n    },\n    // tabs, 关闭全部\n    CloseAllTab: function CloseAllTab() {\n      this.editableTabs = [];\n      this.editableTabsValue = '1';\n      this.$store.commit('activeIndex', null);\n      this.$router.push(\"/\");\n    },\n    // tabs, 刷新当前\n    RefreshCurrentTab: function RefreshCurrentTab() {\n      var _this3 = this;\n\n      var tab2 = this.editableTabs.filter(function (item) {\n        return item.name === _this3.editableTabsValue;\n      });\n\n      if (tab2.length >= 1) {\n        this.$nextTick(function () {\n          //跳转\n          _this3.$router.push(tab2[0].url);\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["MainContent.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"main-container\" :class=\"isCollapse?'tabs-width2':'tabs-width1'\">\n        <el-tabs class=\"tabs\" v-model=\"editableTabsValue\" type=\"card\" closable @tab-remove=\"removeTab\" @tab-click=\"selectedTabHandle\" :class=\"isCollapse?'tabs-width2':'tabs-width1'\">\n            <el-tab-pane\n                v-for=\"item in editableTabs\"\n                :key=\"item.name\"\n                :label=\"item.title\"\n                :name=\"item.name\"\n            >\n            <span slot=\"label\"><i :class=\"item.icon\"></i> {{item.title}} </span>\n            </el-tab-pane>\n            <el-dropdown class=\"tabs-tools\" :show-timeout=\"0\" trigger=\"hover\">\n                <div style=\"font-size:20px;width:50px;\"><i class=\"el-icon-arrow-down\"></i></div>\n                <el-dropdown-menu slot=\"dropdown\">\n                    <el-dropdown-item @click.native=\"CloseCurrentTab\">关闭当前标签</el-dropdown-item>\n                    <el-dropdown-item @click.native=\"CloseOtherTab\">关闭其它标签</el-dropdown-item>\n                    <el-dropdown-item @click.native=\"CloseAllTab\">关闭全部标签</el-dropdown-item>\n                    <el-dropdown-item @click.native=\"RefreshCurrentTab\">刷新当前标签</el-dropdown-item>\n                </el-dropdown-menu>\n            </el-dropdown>\n        </el-tabs>\n        <div class=\"view\">\n            <!-- 内容区域 -->\n            <router-view></router-view>\n        </div>\n        \n    </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\texport default {\n        computed: {\n        ... mapState({\n                headerColor: state=>state.menu.headerColor,\n                isCollapse: state=>state.menu.isCollapse,\n                activeIndex: state=>state.menu.activeIndex\n            }),\n            editableTabs:{\n                get () { return this.$store.state.menu.editableTabs },\n                set (val) { this.$store.commit('editableTabs', val) }\n            },\n            editableTabsValue:{\n                get () { return this.$store.state.menu.editableTabsValue },\n                set (val) { this.$store.commit('editableTabsValue', val) }\n            }\n        },\n\t    data() {\n\t      return {\n                         \n            tabIndex: 2\n            };\n\t    },\n\t    methods: {\n            // tabs, 选中tab\n            selectedTabHandle (tab) {\n                tab = this.editableTabs.filter(item => item.name === tab.name)\n                if (tab.length >= 1) {\n                    //切换标签页时同步更新高亮菜单\n                    this.$store.commit('activeIndex', tab[0].menuId.toString());\n                    this.$router.push(tab[0].url);\n                }\n            },\n            //删除标签页\n\t        removeTab(targetName) {\n                let tabs = this.editableTabs;\n                let activeName = this.editableTabsValue;\n                if (activeName === targetName) {\n                tabs.forEach((tab, index) => {\n                    if (tab.name === targetName) {\n                        let nextTab = tabs[index + 1] || tabs[index - 1];\n                        if (nextTab) {\n                            activeName = nextTab.name;\n                        }\n                    }\n                });\n                }\n                //当前标签序号\n                this.editableTabsValue = activeName;\n                //标签\n                this.editableTabs = tabs.filter(tab => tab.name !== targetName);\n                var tab2 = this.editableTabs.filter(item => item.name === this.editableTabsValue);\n                if (tab2.length >= 1) {\n                    //切换标签页时同步更新高亮菜单\n                    this.$store.commit('activeIndex', tab2[0].menuId.toString());\n                    //跳转\n                    this.$router.push(tab2[0].url);\n                }\n            },\n            // tabs, 关闭当前\n            CloseCurrentTab () {\n                this.removeTab(this.editableTabsValue)\n            },\n            // tabs, 关闭其它\n            CloseOtherTab () {\n                this.editableTabs = this.editableTabs.filter(item => item.name === this.editableTabsValue)\n            },\n            // tabs, 关闭全部\n            CloseAllTab () {\n                this.editableTabs = [];\n                this.editableTabsValue = '1';\n                this.$store.commit('activeIndex', null);\n                this.$router.push(\"/\")\n            },\n            // tabs, 刷新当前\n            RefreshCurrentTab () {\n                var tab2 = this.editableTabs.filter(item => item.name === this.editableTabsValue);\n                if (tab2.length >= 1) {\n                    this.$nextTick(() => {\n                        //跳转\n                        this.$router.push(tab2[0].url);\n                    })\n                }\n                \n            }\n\t    }\n\t  }\n</script>\n\n\n<style>\n\t.main-container{\n        padding: 0 5px 5px;\n        position: absolute;\n        top: 5rem;\n        left: 1px;\n        right: 1px;\n        bottom: 0px;\n    }\n    .tabs {\n        position: fixed;\n        top: 60px;\n        right: 2px;\n        padding-left: 0px;\n        padding-right: 2px;\n        z-index: 1020;\n        height: 40px;\n        line-height: 40px;\n        font-size: 14px;\n        background: rgb(255, 253, 255);\n        border-color: rgba(200, 206, 206, 0.5);\n        /* // border-left-width: 1px;\n        // border-left-style: solid; */\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n    }\n    .tabs-width1{\n        left: 200px;\n    }\n    .tabs-width2{\n        left: 65px;\n    }\n    .view{\n        position: absolute;\n        top: 45px;\n        left: 5px;\n        right: 5px;\n        bottom: 5px;\n        padding: 5px;\n    }\n    .tabs-tools {\n        position: fixed;\n        top: 60px;\n        right: 0;\n        z-index: 1000;\n        height: 40px;\n        font-size: 14px;\n        line-height: 40px;\n        cursor: pointer;\n        border-color: rgba(200, 206, 206, 0.5);\n        border-left-width: 1px;\n        border-left-style: solid;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n        background: rgba(255, 255, 255, 1);\n    }\n</style>"],"sourceRoot":"src/menu"}]}