{"remainingRequest":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\babel-loader\\lib\\index.js!C:\\Workspace\\VueProjects\\vue-template-box\\src\\api\\index.js","dependencies":[{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\src\\api\\index.js","mtime":1654529038000},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677392615027},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1677392610787},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\babel-loader\\lib\\index.js","mtime":1677392616277}],"contextDependencies":[],"result":["import axios from 'axios';\naxios.defaults.withCredentials = true; // 添加一个响应拦截器\n\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  return Promise.reject(error);\n}); //基地址\n\nvar base = 'http://localhost:8022'; //接口代理地址参见：config/index.js中的proxyTable配置\n//通用方法\n\nexport var POST = function POST(url, params) {\n  return axios.post(\"\".concat(base).concat(url), params).then(function (res) {\n    return res.data;\n  });\n};\nexport var GET = function GET(url, params) {\n  return axios.get(\"\".concat(base).concat(url), {\n    params: params\n  }).then(function (res) {\n    return res.data;\n  });\n};\nexport var PUT = function PUT(url, params) {\n  return axios.put(\"\".concat(base).concat(url), params).then(function (res) {\n    return res.data;\n  });\n};\nexport var DELETE = function DELETE(url, params) {\n  return axios.delete(\"\".concat(base).concat(url), {\n    params: params\n  }).then(function (res) {\n    return res.data;\n  });\n};\nexport var PATCH = function PATCH(url, params) {\n  return axios.patch(\"\".concat(base).concat(url), params).then(function (res) {\n    return res.data;\n  });\n};",{"version":3,"sources":["C:\\Workspace\\VueProjects\\vue-template-box\\src\\api\\index.js"],"names":["axios","defaults","withCredentials","interceptors","response","use","error","Promise","reject","base","POST","url","params","post","then","res","data","GET","get","PUT","put","DELETE","delete","PATCH","patch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,eAAf,GAAiC,IAAjC,C,CAEA;;AACAF,KAAK,CAACG,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAAUD,QAAV,EAAoB;AACnD,SAAOA,QAAP;AACA,CAFD,EAEG,UAAUE,KAAV,EAAiB;AACnB,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CAJD,E,CAMA;;AACA,IAAIG,IAAI,GAAG,uBAAX,C,CAAqC;AAErC;;AACA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAMC,MAAN,EAAiB;AACnC,SAAOZ,KAAK,CAACa,IAAN,WAAcJ,IAAd,SAAqBE,GAArB,GAA4BC,MAA5B,EAAoCE,IAApC,CAAyC,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAA5C,CAAP;AACD,CAFM;AAIP,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACN,GAAD,EAAMC,MAAN,EAAiB;AAClC,SAAOZ,KAAK,CAACkB,GAAN,WAAaT,IAAb,SAAoBE,GAApB,GAA2B;AAACC,IAAAA,MAAM,EAAEA;AAAT,GAA3B,EAA6CE,IAA7C,CAAkD,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAArD,CAAP;AACD,CAFM;AAIP,OAAO,IAAMG,GAAG,GAAG,SAANA,GAAM,CAACR,GAAD,EAAMC,MAAN,EAAiB;AAClC,SAAOZ,KAAK,CAACoB,GAAN,WAAaX,IAAb,SAAoBE,GAApB,GAA2BC,MAA3B,EAAmCE,IAAnC,CAAwC,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAA3C,CAAP;AACD,CAFM;AAIP,OAAO,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACV,GAAD,EAAMC,MAAN,EAAiB;AACrC,SAAOZ,KAAK,CAACsB,MAAN,WAAgBb,IAAhB,SAAuBE,GAAvB,GAA8B;AAACC,IAAAA,MAAM,EAAEA;AAAT,GAA9B,EAAgDE,IAAhD,CAAqD,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAAxD,CAAP;AACD,CAFM;AAIP,OAAO,IAAMO,KAAK,GAAG,SAARA,KAAQ,CAACZ,GAAD,EAAMC,MAAN,EAAiB;AACpC,SAAOZ,KAAK,CAACwB,KAAN,WAAef,IAAf,SAAsBE,GAAtB,GAA6BC,MAA7B,EAAqCE,IAArC,CAA0C,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAR;AAAA,GAA7C,CAAP;AACD,CAFM","sourcesContent":["import axios from 'axios'\n\naxios.defaults.withCredentials = true;\n\n// 添加一个响应拦截器\naxios.interceptors.response.use(function (response) {\n\treturn response;\n}, function (error) {\n\treturn Promise.reject(error);\n});\n\n//基地址\nlet base = 'http://localhost:8022';  //接口代理地址参见：config/index.js中的proxyTable配置\n\n//通用方法\nexport const POST = (url, params) => {\n  return axios.post(`${base}${url}`, params).then(res => res.data)\n}\n\nexport const GET = (url, params) => {\n  return axios.get(`${base}${url}`, {params: params}).then(res => res.data)\n}\n\nexport const PUT = (url, params) => {\n  return axios.put(`${base}${url}`, params).then(res => res.data)\n}\n\nexport const DELETE = (url, params) => {\n  return axios.delete(`${base}${url}`, {params: params}).then(res => res.data)\n}\n\nexport const PATCH = (url, params) => {\n  return axios.patch(`${base}${url}`, params).then(res => res.data)\n}\n"]}]}