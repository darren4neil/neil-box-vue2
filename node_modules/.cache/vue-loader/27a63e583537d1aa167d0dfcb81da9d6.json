{"remainingRequest":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Workspace\\VueProjects\\vue-template-box\\src\\menu\\NavBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\src\\menu\\NavBar.vue","mtime":1677397331769},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677397323499},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1677397330759},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\babel-loader\\lib\\index.js","mtime":1677397323090},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677397323499},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\vue-loader\\lib\\index.js","mtime":1677397331049}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapState } from 'vuex'\r\nimport  TMenu  from './TMenu'\r\n\texport default {\r\n        \r\n        computed: {\r\n        ... mapState({\r\n                headerColor: state=>state.menu.headerColor,\r\n                isCollapse: state=>state.menu.isCollapse,\r\n                menus: state=>state.menu.menus,\r\n                activeIndex: state=>state.menu.activeIndex\r\n            }),\r\n            editableTabs:{\r\n                get () { return this.$store.state.menu.editableTabs },\r\n                set (val) { this.$store.commit('editableTabs', val) }\r\n            },\r\n            editableTabsValue:{\r\n                get () { return this.$store.state.menu.editableTabsValue },\r\n                set (val) { this.$store.commit('editableTabsValue', val) }\r\n            }\r\n        },\r\n        components:{\r\n            TMenu\r\n        },\r\n\t    data() {\r\n\t      return {\r\n              \r\n\t      };\r\n\t    },\r\n\t    methods: {\r\n            // 跳转方法\r\n\t        goTo(name){\r\n              this.$router.push(name);\r\n            },\r\n            handleOpen(key, keyPath) {\r\n                console.log(key, keyPath);\r\n            },\r\n            handleClose(key, keyPath) {\r\n                console.log(key, keyPath);\r\n            }\r\n\t    },\r\n        created () {\r\n        }\r\n\t  }\r\n",{"version":3,"sources":["NavBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NavBar.vue","sourceRoot":"src/menu","sourcesContent":["<template>\r\n    <div class=\"menu-bar-container\">\r\n        <!-- logo -->\r\n        <div class=\"logo\" index=\"\" :style=\"{'background-color':headerColor}\" :class=\"isCollapse?'el-menu-width2':'el-menu-width1'\">\r\n            <img src=\"../assets/logo.png\" class=\"logoImg\" v-if=\"isCollapse\">\r\n            <div class=\"tohide\" v-if=\"!isCollapse\">管理系统</div>\r\n        </div>\r\n        <!-- 左侧目录 -->\r\n        <el-menu ref=\"navmenu\" :default-active=\"activeIndex\" :collapse=\"isCollapse\" \r\n        :class=\"isCollapse?'el-menu-width2':'el-menu-width1'\" :collapse-transition=\"false\">\r\n            <t-menu v-for=\"item in menus\" :menu=\"item\" :key=\"item.menuId\"></t-menu>\r\n        </el-menu>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport  TMenu  from './TMenu'\r\n\texport default {\r\n        \r\n        computed: {\r\n        ... mapState({\r\n                headerColor: state=>state.menu.headerColor,\r\n                isCollapse: state=>state.menu.isCollapse,\r\n                menus: state=>state.menu.menus,\r\n                activeIndex: state=>state.menu.activeIndex\r\n            }),\r\n            editableTabs:{\r\n                get () { return this.$store.state.menu.editableTabs },\r\n                set (val) { this.$store.commit('editableTabs', val) }\r\n            },\r\n            editableTabsValue:{\r\n                get () { return this.$store.state.menu.editableTabsValue },\r\n                set (val) { this.$store.commit('editableTabsValue', val) }\r\n            }\r\n        },\r\n        components:{\r\n            TMenu\r\n        },\r\n\t    data() {\r\n\t      return {\r\n              \r\n\t      };\r\n\t    },\r\n\t    methods: {\r\n            // 跳转方法\r\n\t        goTo(name){\r\n              this.$router.push(name);\r\n            },\r\n            handleOpen(key, keyPath) {\r\n                console.log(key, keyPath);\r\n            },\r\n            handleClose(key, keyPath) {\r\n                console.log(key, keyPath);\r\n            }\r\n\t    },\r\n        created () {\r\n        }\r\n\t  }\r\n</script>\r\n\r\n\r\n<style>\r\n    .menu-bar-container {\r\n        position: fixed;\r\n        top: 0px;\r\n        left: 0;\r\n        bottom: 0;\r\n        z-index: 1100;\r\n    }\r\n\t.logo{\r\n        height: 60px;\r\n        font-size: 25px;\r\n        color: white;\r\n    }\r\n    .logoImg{\r\n        width: 100%;\r\n    }\r\n    .tohide{\r\n        padding: 12px;\r\n    }\r\n    .el-menu-width1{\r\n        width: 200px;\r\n    }\r\n    .el-menu-width2{\r\n        width: 65px;\r\n    }\r\n</style>"]}]}