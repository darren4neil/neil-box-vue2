{"remainingRequest":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Workspace\\VueProjects\\vue-template-box\\src\\menu\\NavBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\src\\menu\\NavBar.vue","mtime":1654529038000},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677392615027},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\babel-loader\\lib\\index.js","mtime":1677392616277},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677392615027},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\vue-loader\\lib\\index.js","mtime":1677392613557}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\nimport  TMenu  from './TMenu'\n\texport default {\n        \n        computed: {\n        ... mapState({\n                headerColor: state=>state.menu.headerColor,\n                isCollapse: state=>state.menu.isCollapse,\n                menus: state=>state.menu.menus,\n                activeIndex: state=>state.menu.activeIndex\n            }),\n            editableTabs:{\n                get () { return this.$store.state.menu.editableTabs },\n                set (val) { this.$store.commit('editableTabs', val) }\n            },\n            editableTabsValue:{\n                get () { return this.$store.state.menu.editableTabsValue },\n                set (val) { this.$store.commit('editableTabsValue', val) }\n            }\n        },\n        components:{\n            TMenu\n        },\n\t    data() {\n\t      return {\n              \n\t      };\n\t    },\n\t    methods: {\n            // 跳转方法\n\t        goTo(name){\n              this.$router.push(name);\n            },\n            handleOpen(key, keyPath) {\n                console.log(key, keyPath);\n            },\n            handleClose(key, keyPath) {\n                console.log(key, keyPath);\n            }\n\t    },\n        created () {\n        }\n\t  }\n",{"version":3,"sources":["NavBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NavBar.vue","sourceRoot":"src/menu","sourcesContent":["<template>\n    <div class=\"menu-bar-container\">\n        <!-- logo -->\n        <div class=\"logo\" index=\"\" :style=\"{'background-color':headerColor}\" :class=\"isCollapse?'el-menu-width2':'el-menu-width1'\">\n            <img src=\"../assets/logo.png\" class=\"logoImg\" v-if=\"isCollapse\">\n            <div class=\"tohide\" v-if=\"!isCollapse\">管理系统</div>\n        </div>\n        <!-- 左侧目录 -->\n        <el-menu ref=\"navmenu\" :default-active=\"activeIndex\" :collapse=\"isCollapse\" \n        :class=\"isCollapse?'el-menu-width2':'el-menu-width1'\" :collapse-transition=\"false\">\n            <t-menu v-for=\"item in menus\" :menu=\"item\" :key=\"item.menuId\"></t-menu>\n        </el-menu>\n    </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport  TMenu  from './TMenu'\n\texport default {\n        \n        computed: {\n        ... mapState({\n                headerColor: state=>state.menu.headerColor,\n                isCollapse: state=>state.menu.isCollapse,\n                menus: state=>state.menu.menus,\n                activeIndex: state=>state.menu.activeIndex\n            }),\n            editableTabs:{\n                get () { return this.$store.state.menu.editableTabs },\n                set (val) { this.$store.commit('editableTabs', val) }\n            },\n            editableTabsValue:{\n                get () { return this.$store.state.menu.editableTabsValue },\n                set (val) { this.$store.commit('editableTabsValue', val) }\n            }\n        },\n        components:{\n            TMenu\n        },\n\t    data() {\n\t      return {\n              \n\t      };\n\t    },\n\t    methods: {\n            // 跳转方法\n\t        goTo(name){\n              this.$router.push(name);\n            },\n            handleOpen(key, keyPath) {\n                console.log(key, keyPath);\n            },\n            handleClose(key, keyPath) {\n                console.log(key, keyPath);\n            }\n\t    },\n        created () {\n        }\n\t  }\n</script>\n\n\n<style>\n    .menu-bar-container {\n        position: fixed;\n        top: 0px;\n        left: 0;\n        bottom: 0;\n        z-index: 1100;\n    }\n\t.logo{\n        height: 60px;\n        font-size: 25px;\n        color: white;\n    }\n    .logoImg{\n        width: 100%;\n    }\n    .tohide{\n        padding: 12px;\n    }\n    .el-menu-width1{\n        width: 200px;\n    }\n    .el-menu-width2{\n        width: 65px;\n    }\n</style>"]}]}