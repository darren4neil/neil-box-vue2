{"remainingRequest":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Workspace\\VueProjects\\vue-template-box\\src\\menu\\TMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\src\\menu\\TMenu.vue","mtime":1677397331769},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677397323499},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\babel-loader\\lib\\index.js","mtime":1677397323090},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677397323499},{"path":"C:\\Workspace\\VueProjects\\vue-template-box\\node_modules\\vue-loader\\lib\\index.js","mtime":1677397331049}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapState } from 'vuex';\r\nexport default {\r\n  name: 'TMenu', //组件名\r\n  props: {\r\n    menu: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    ... mapState({\r\n                activeIndex: state=>state.menu.activeIndex\r\n            }),\r\n    editableTabs:{\r\n        get () { return this.$store.state.menu.editableTabs },\r\n        set (val) { this.$store.commit('editableTabs', val) }\r\n    },\r\n    editableTabsValue:{\r\n        get () { return this.$store.state.menu.editableTabsValue },\r\n        set (val) { this.$store.commit('editableTabsValue', val) }\r\n    }\r\n  },\r\n  methods: {\r\n    handleRouter(menu) {\r\n      // tab标签页选中, 如果不存在则先添加\r\n      var tab = this.editableTabs.filter(item => item.name === menu.menuName)[0]\r\n      if (!tab) {\r\n        tab = {\r\n          name: menu.menuName,\r\n          title: menu.menuName,\r\n          icon: menu.icon,\r\n          url:menu.route,\r\n          menuId:menu.menuId\r\n        }\r\n        this.editableTabs = this.editableTabs.concat(tab)\r\n      }\r\n      this.editableTabsValue = tab.name;\r\n      //改变高亮导航\r\n      this.$store.commit('activeIndex', menu.menuId.toString());\r\n      // 跳转路由\r\n      this.$router.push(menu.route);\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["TMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TMenu.vue","sourceRoot":"src/menu","sourcesContent":["<!-- TMenu.vue -->\r\n<template>\r\n  <!-- 源码问题，需加上:popper-append-to-body=\"false\"，不然会导致重复调用 -->\r\n  <el-submenu v-if=\"menu.children && menu.children.length >= 1\" :index=\"menu.menuId + ''\" :key=\"menu.menuId\" :popper-append-to-body=\"false\">\r\n    <template slot=\"title\">\r\n      <i :class=\"menu.icon\"></i>\r\n      <span slot=\"title\">{{menu.menuName}}</span>\r\n    </template>\r\n    <t-menu v-for=\"item in menu.children\" :menu=\"item\" :key=\"item.menuId\"></t-menu>\r\n  </el-submenu>\r\n  <el-menu-item v-else :index=\"menu.menuId + ''\" @click=\"handleRouter(menu)\" :key=\"menu.menuId\">\r\n    <i :class=\"menu.icon\"></i>\r\n    <span slot=\"title\">{{menu.menuName}}</span>\r\n  </el-menu-item>\r\n</template>\r\n<script>\r\nimport { mapState } from 'vuex';\r\nexport default {\r\n  name: 'TMenu', //组件名\r\n  props: {\r\n    menu: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    ... mapState({\r\n                activeIndex: state=>state.menu.activeIndex\r\n            }),\r\n    editableTabs:{\r\n        get () { return this.$store.state.menu.editableTabs },\r\n        set (val) { this.$store.commit('editableTabs', val) }\r\n    },\r\n    editableTabsValue:{\r\n        get () { return this.$store.state.menu.editableTabsValue },\r\n        set (val) { this.$store.commit('editableTabsValue', val) }\r\n    }\r\n  },\r\n  methods: {\r\n    handleRouter(menu) {\r\n      // tab标签页选中, 如果不存在则先添加\r\n      var tab = this.editableTabs.filter(item => item.name === menu.menuName)[0]\r\n      if (!tab) {\r\n        tab = {\r\n          name: menu.menuName,\r\n          title: menu.menuName,\r\n          icon: menu.icon,\r\n          url:menu.route,\r\n          menuId:menu.menuId\r\n        }\r\n        this.editableTabs = this.editableTabs.concat(tab)\r\n      }\r\n      this.editableTabsValue = tab.name;\r\n      //改变高亮导航\r\n      this.$store.commit('activeIndex', menu.menuId.toString());\r\n      // 跳转路由\r\n      this.$router.push(menu.route);\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n</style>"]}]}